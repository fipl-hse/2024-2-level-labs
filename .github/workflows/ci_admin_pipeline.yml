name: "Check admin PR"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.repository }}-${{ github.ref }}-admin
  cancel-in-progress: true

env:
  REPOSITORY_TYPE: admin
  GITHUB_REPOSITORY: ${{ github.repository }}
  BRANCH_NAME: ${{ github.ref }}

jobs:
  install-dependencies:
    name: Installing dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.10
      - name: Confirming everything is OK
        run: |
          ls -la venv

  unittests:
    name: Unittests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [ install-dependencies ]
    env:
      PR_NAME: ${{ github.event.pull_request.title }}
      PR_AUTHOR: ${{ github.actor }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.10
      - name: Run tests
        run: |
          source venv/bin/activate
          export PYTHONPATH=$(pwd)
          python config/run_tests.py "$PR_NAME" "$PR_AUTHOR"

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [ unittests ]
    env:
      PR_NAME: ${{ github.event.pull_request.title }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.10
      - name: Run start
        run: |
          bash config/collect_coverage/run_coverage.sh "$PR_NAME"

  spellcheck:
    name: Spellcheck
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]
    steps:
      - uses: actions/checkout@master
      - name: Install Aspell
        run: |
          sudo apt-get install aspell aspell-en aspell-ru
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.10
      - name: Spell check
        run: |
          bash config/spellcheck/_stage_spellcheck.sh

  doc8-checks:
    name: Doc8 checks
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.10
      - name: Doc8 check
        run: |
          source venv/bin/activate
          export PYTHONPATH=$(pwd)
          python config/stage_1_style_tests/check_doc8.py

  docstring-style-checks:
    name: Docstring style checks
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.10
      - name: Docstring style checks
        run: |
          source venv/bin/activate
          export PYTHONPATH=$(pwd)
          python config/stage_1_style_tests/check_docstrings.py

  sphinx-build:
    name: Sphinx build
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.10
      - name: Build Sphinx project
        run: |
          bash config/website/_stage_run_sphinx_build.sh

  requirements-check:
    name: Requirements check
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.10
      - name: Dependencies check
        run: |
          source venv/bin/activate
          export PYTHONPATH=$(pwd)
          python config/stage_1_style_tests/requirements_check.py

  newline-check:
    name: Newline check
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.10
      - name: Newline check
        run: |
          source venv/bin/activate
          export PYTHONPATH=$(pwd)
          python config/stage_1_style_tests/newline_check.py

  stubs-relevance-check:
    name: Stubs relevance check
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.10
      - name: Stub relevance check
        run: |
          source venv/bin/activate
          export PYTHONPATH=$(pwd)
          python config/stage_1_style_tests/check_actual_stubs.py
